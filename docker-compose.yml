version: "3.8"
services:
  deliveroo:
    build:
      # context: ../Deliveroo.js/
      dockerfile: ./docker-images/deliveroo
    ports:
      - "8888:8080"
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 5s # check every 30 seconds
      timeout: 5s # at most wait for 5 seconds and then mark as unhealthy
      retries: 5 # retries 5 times before marking unhealthy
      start_period: 15s # period in which the start_interval is applied instead of the normal interval
      start_interval: 2s


  db:
    image: postgres:16
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s # check every 30 seconds
      timeout: 5s # at most wait for 5 seconds and then mark as unhealthy
      retries: 5 # retries 5 times before marking unhealthy
      start_period: 15s # period in which the start_interval is applied instead of the normal interval
      start_interval: 2s

  run_migrations:
    build:
      context: .
      dockerfile: ./docker-images/evolutionary_gpt_agent
    env_file:
      - .env
    working_dir: /evolutionary_gpt_agent/src/models/db
    command: ["alembic", "upgrade", "head"]
    depends_on:
      db:
        condition: service_healthy
        restart: true

  agent:
    build:
      context: .
      dockerfile: ./docker-images/evolutionary_gpt_agent
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
      run_migrations:
        condition: service_completed_successfully
    healthcheck:
      test: curl --fail http://localhost:8000/health-check || exit 1
      interval: 5s # check every 30 seconds
      timeout: 5s # at most wait for 5 seconds and then mark as unhealthy
      retries: 5 # retries 5 times before marking unhealthy
      start_period: 15s # period in which the start_interval is applied instead of the normal interval
      start_interval: 2s

  deliveroo_client:
    build:
      context: .
      dockerfile: ./docker-images/deliveroo_client
    depends_on:
      deliveroo:
        condition: service_healthy
        restart: true
      agent:
        condition: service_healthy
        restart: true
    healthcheck:
      test: curl --fail http://localhost:9999/health-check || exit 1
      interval: 5s # check every 30 seconds
      timeout: 5s # at most wait for 5 seconds and then mark as unhealthy
      retries: 5 # retries 5 times before marking unhealthy
      start_period: 15s # period in which the start_interval is applied instead of the normal interval
      start_interval: 2s

  agent_pov_server:
    build:
      context: .
      dockerfile: ./docker-images/agent_pov_server
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    healthcheck:
      test: curl --fail http://localhost:9876/health-check || exit 1
      interval: 5s # check every 30 seconds
      timeout: 5s # at most wait for 5 seconds and then mark as unhealthy
      retries: 5 # retries 5 times before marking unhealthy
      start_period: 15s # period in which the start_interval is applied instead of the normal interval
      start_interval: 2s
    ports:
      - "9876:9876"

  # agent_pov:
  #   build:
  #     context: .
  #     dockerfile: ./docker-images/agent_pov
  #   depends_on:
  #     agent_pov_server:
  #       condition: service_healthy
  #       restart: true
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./agent-pov/src:/agent-pov/src

volumes:
  pg_data:
