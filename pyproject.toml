[project]
name = "evolutionary_gpt_agent"
version = "3.0.0"
description = "A BDI agent with evolutionary cabalities"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
keywords = ["GPT", "LLM", "Agent", "Autonoumous", "BDI"]
authors = [
  {name = "Federico Izzo", email = "federico.izzo99@gmail.com" },
  {name = "Francesco Bozzo", email = "francesco.bozzo@studenti.unitn.it" }
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
  "requests >= 2",
  "python-socketio[client] >= 5",
  "psycopg2_binary >= 2",
  "SQLAlchemy[mypy] >= 2",
  "alembic >= 1",
  "sqlalchemy-json == 0.7.0",
  "PyYaml >= 5.3.1", # fix a bug
  "pydantic >= 2",
  "fastapi ==  0.104.1",
  "uvicorn == 0.23.2",
  "openai",
  "instructor == 0.3.1",
  "loguru == 0.7.2",
  "toml == 0.10.2",
  "numpy" # most of the time gpt returns code that contain numpy code
]

[project.optional-dependencies]
pre-commit = [
  "pre-commit",
  "black == 23.10.1",
  "pycln == 2.3.0",
  "isort == 5.11.5",
  "mypy == 1.6.1"
]
dev = [
  "typer[all] == 0.9.0",
  "python-on-whales == 0.65.0",
  "python-dotenv"
]

[project.scripts]
gpt-agent = "evolutionary_gpt_agent.entrypoints.main:main"
deliveroo-client = "deliveroo_client.main:main"


[tool.setuptools]
package-data = {"evolutionary_gpt_agent" = []}

[tool.black]
line-length = 88

[tool.pycln]
all = true

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
enable_incomplete_feature = "Unpack"
strict = true
follow_imports = "skip"
disallow_untyped_decorators = false
implicit_reexport = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
disallow_subclassing_any = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"
